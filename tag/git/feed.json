{
    "version": "https://jsonfeed.org/version/1",
    "title": "想的越少，睡的越好 • All posts by \"git\" tag",
    "description": "无精打采的失眠患者",
    "home_page_url": "https://juju486.github.io",
    "items": [
        {
            "id": "https://juju486.github.io/2023/03/04/Git%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",
            "url": "https://juju486.github.io/2023/03/04/Git%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",
            "title": "Git的基本使用",
            "date_published": "2023-03-04T11:42:11.000Z",
            "content_html": "<h1 id=\"常用命令\"><a class=\"markdownIt-Anchor\" href=\"#常用命令\">#</a> 常用命令</h1>\n<p>在终端中使用 <code>git --help</code>  可查看</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">git init：将当前目录初始化为Git仓库。</span><br><span class=\"line\"></span><br><span class=\"line\">git add：将指定文件添加到暂存区。</span><br><span class=\"line\"></span><br><span class=\"line\">git add .：将所有文件添加到暂存区。</span><br><span class=\"line\"></span><br><span class=\"line\">git commit -m &quot;message&quot;：提交暂存区的文件到本地仓库，并添加提交信息。</span><br><span class=\"line\"></span><br><span class=\"line\">git status：查看当前仓库的状态，包括哪些文件已修改、哪些文件已暂存等信息。</span><br><span class=\"line\"></span><br><span class=\"line\">git log：查看提交历史记录。</span><br><span class=\"line\"></span><br><span class=\"line\">git diff：查看当前文件与暂存区或本地仓库中文件的差异。</span><br><span class=\"line\"></span><br><span class=\"line\">git branch：查看当前所有分支。</span><br><span class=\"line\"></span><br><span class=\"line\">git checkout：切换到指定分支。</span><br><span class=\"line\"></span><br><span class=\"line\">git merge：将指定分支合并到当前分支。</span><br><span class=\"line\"></span><br><span class=\"line\">git clone：克隆远程仓库到本地。</span><br><span class=\"line\"></span><br><span class=\"line\">git push：将本地仓库指定分支的代码推送到远程仓库。</span><br><span class=\"line\"></span><br><span class=\"line\">git pull：将远程仓库指定分支的代码拉取到本地。</span><br><span class=\"line\"></span><br><span class=\"line\">git remote add：给本地仓库添加一个远程仓库。</span><br><span class=\"line\"></span><br><span class=\"line\">git remote -v：查看本地仓库关联的远程仓库信息。</span><br><span class=\"line\"></span><br><span class=\"line\">git stash：将当前修改暂存起来，以便切换分支或合并分支。</span><br><span class=\"line\"></span><br><span class=\"line\">git reset：将指定文件从暂存区移除，并撤销修改。</span><br><span class=\"line\"></span><br><span class=\"line\">git rm：将指定文件从Git仓库中删除。</span><br></pre></td></tr></table></figure>\n<h1 id=\"与远程仓库关联\"><a class=\"markdownIt-Anchor\" href=\"#与远程仓库关联\">#</a> 与远程仓库关联</h1>\n<p>首次使用需要绑定用户名和邮箱</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">git config --global user.name &quot;用户名&quot;</span><br><span class=\"line\">git config --global user.email &quot;邮箱&quot;</span><br></pre></td></tr></table></figure>\n<p>在终端中，进入你项目的顶级目录，输入下面的命令初始化本地仓库。完成后目录中会出现  <code>.git</code>  的文件夹（需要在文资源管理器中设置展示隐藏文件才会显示，不显示也不影响使用）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<p>接下来关联远程仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">git remote add origin 仓库地址</span><br></pre></td></tr></table></figure>\n<p>然后上传文件至远程仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;将所有文件添加到暂存区</span><br><span class=\"line\">git add . </span><br><span class=\"line\">&#x2F;&#x2F;提交暂存区的文件到本地仓库，并添加提交信息</span><br><span class=\"line\">git commit -m &quot;本次提交的描述&quot;</span><br><span class=\"line\">&#x2F;&#x2F;将本地仓库指定分支的代码推送到远程仓库</span><br><span class=\"line\">git push -u origin &quot;master&quot;</span><br></pre></td></tr></table></figure>\n<h1 id=\"更改文件并推送至远程仓库\"><a class=\"markdownIt-Anchor\" href=\"#更改文件并推送至远程仓库\">#</a> 更改文件并推送至远程仓库</h1>\n<p>修改文件后在终端输入 <code>git status</code>  可以查看到更改和暂存的文件<br>\n将修改的文件添加到暂存区</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;添加所有的修改文件到暂存区</span><br><span class=\"line\">git add . </span><br><span class=\"line\">&#x2F;&#x2F;或者使用下面的命令添加指定文件到暂存区</span><br><span class=\"line\">git add 文件名</span><br><span class=\"line\">&#x2F;&#x2F;提交并添加提交描述</span><br><span class=\"line\">git commit -m &quot;本次提交的描述&quot;</span><br><span class=\"line\">&#x2F;&#x2F;推送</span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用分支进行多人协作\"><a class=\"markdownIt-Anchor\" href=\"#使用分支进行多人协作\">#</a> 使用分支进行多人协作</h1>\n<p>假如 B 需要和你进行协作开发，B 首先需要克隆你的仓库</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">git clone 仓库地址</span><br></pre></td></tr></table></figure>\n<p>然后创建并切换一个新的分支进行开发<br>\n使用 <code>git branch</code>  可以查看所有本地分支和当前所在分支</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;创建新的分支，dev 是分支名称，你可以改成你需要的分支名称</span><br><span class=\"line\">git branch dev</span><br><span class=\"line\">&#x2F;&#x2F;切换至 dev 分支</span><br><span class=\"line\">git checkout dev</span><br></pre></td></tr></table></figure>\n<p>B 现在可以随意开发了。假如现在 B 需要推送修改的文件</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;描述&quot;</span><br><span class=\"line\">&#x2F;&#x2F;首次推送需要关联远程的分支 -u origin &quot;分支名&quot; ，之后 git push 即可 </span><br><span class=\"line\">git push -u origin &quot;dev&quot; </span><br></pre></td></tr></table></figure>\n<p>合并你和 B 开发的分支<br>\n下面是你要操作的</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;切换到 B 开发的 dev 分支 </span><br><span class=\"line\">git checkout dev</span><br><span class=\"line\">&#x2F;&#x2F;拉取一下，保证是最新的</span><br><span class=\"line\">git pull </span><br><span class=\"line\">&#x2F;&#x2F;切换到你开发的分支</span><br><span class=\"line\">git checkout master</span><br><span class=\"line\">&#x2F;&#x2F;合并</span><br><span class=\"line\">git merge dev</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>此时，你本地 master 分支已经包含了 B 开发的 dev 分支了。<br>\n如果本次合并你和 B 修改了同一个文件，在文件中会标记你和 B 的修改，你需要手动解决一下冲突。</p>\n<p>解决后保存推送。</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">git add . </span><br><span class=\"line\">git commit -m &quot;描述&quot;</span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n<p>如果 B 要同步一下你合并后的文件，B 在 dev 分支执行 <code>git merge master</code>  即可。</p>\n<p>最后推荐一个新手练习 git 的网站 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybmdpdGJyYW5jaGluZy5qcy5vcmcv\">Learn Git Branching</span></p>\n",
            "tags": [
                "git"
            ]
        }
    ]
}