{
    "version": "https://jsonfeed.org/version/1",
    "title": null,
    "subtitle": null,
    "icon": "https://juju486.github.io/images/favicon.ico",
    "description": null,
    "home_page_url": "https://juju486.github.io",
    "items": [
        {
            "id": "https://juju486.github.io/2024/01/05/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "url": "https://juju486.github.io/2024/01/05/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "title": "数据库学习笔记",
            "date_published": "2024-01-05T16:00:00.000Z",
            "content_html": "<h3 id=\"数据库操作\"><a class=\"anchor\" href=\"#数据库操作\">#</a> 数据库操作</h3>\n<h4 id=\"创建数据库\"><a class=\"anchor\" href=\"#创建数据库\">#</a> 创建数据库</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- create database 数据库名</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> hub</pre></td></tr></table></figure><h4 id=\"查看数据库\"><a class=\"anchor\" href=\"#查看数据库\">#</a> 查看数据库</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">show</span> <span class=\"token keyword\">databases</span></pre></td></tr></table></figure><h4 id=\"选中数据库\"><a class=\"anchor\" href=\"#选中数据库\">#</a> 选中数据库</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- use 库名</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">use</span> hub</pre></td></tr></table></figure><h4 id=\"查看数据库中的表\"><a class=\"anchor\" href=\"#查看数据库中的表\">#</a> 查看数据库中的表</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">show</span> <span class=\"token keyword\">tables</span></pre></td></tr></table></figure><h4 id=\"删除数据库\"><a class=\"anchor\" href=\"#删除数据库\">#</a> 删除数据库</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- drop database 库名</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">drop</span> <span class=\"token keyword\">database</span> hub</pre></td></tr></table></figure><h3 id=\"数据表操作\"><a class=\"anchor\" href=\"#数据表操作\">#</a> 数据表操作</h3>\n<h4 id=\"创建表\"><a class=\"anchor\" href=\"#创建表\">#</a> 创建表</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- create table 表名 (字段名 1 字段类型，…. 字段名 n 字段类型 n);</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  username <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  password <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">-- 创建前判断表是否存在，存在则不创建</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> <span class=\"token keyword\">exists</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  username <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  password <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"查看表\"><a class=\"anchor\" href=\"#查看表\">#</a> 查看表</h4>\n<p>查看表结构</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- desc 表名</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">desc</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>查看表的创建语句</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- show create table 表名 \\G</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">show</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">user</span> \\G<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>“\\G” 选项的含义是使得记录能够按照字段竖着排列，对于内容比较长的记录更易于显示</p>\n<h4 id=\"删除表\"><a class=\"anchor\" href=\"#删除表\">#</a> 删除表</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- drop table 表名</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"数据字段操作\"><a class=\"anchor\" href=\"#数据字段操作\">#</a> 数据字段操作</h3>\n<h4 id=\"修改表字段类型\"><a class=\"anchor\" href=\"#修改表字段类型\">#</a> 修改表字段类型</h4>\n<p>将 user 表的 username 的类型改为 varchar (20)</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- alter table 表名 modify 字段名 类型；</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">modify</span> username <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"增加表字段\"><a class=\"anchor\" href=\"#增加表字段\">#</a> 增加表字段</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- alter table 表名 add column 字段名 类型；</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">add</span> clumn age <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"增加字段时控制字段顺序\"><a class=\"anchor\" href=\"#增加字段时控制字段顺序\">#</a> 增加字段时控制字段顺序</h5>\n<p>在 username 后增加 email 字段</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- ALTER TABLE 表名 ADD 字段名 字段类型 AFTER 字段名；</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">add</span> email <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">after</span> username<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在表最前面增加字段</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- ALTER TABLE 表名 ADD 字段名 字段类型 first;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">add</span> email <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">first</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"删除表字段\"><a class=\"anchor\" href=\"#删除表字段\">#</a> 删除表字段</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- alter table 表名 drop column 字段名；</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">drop</span> <span class=\"token keyword\">column</span> age<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"表字段改名\"><a class=\"anchor\" href=\"#表字段改名\">#</a> 表字段改名</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- alter table 表名 change 字段原名 字段新名 字段类型；</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">user</span> change email em <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"修改表字段排列顺序\"><a class=\"anchor\" href=\"#修改表字段排列顺序\">#</a> 修改表字段排列顺序</h4>\n<p>在增加和修改语句（add/change/modify）中，最后都可以加一个可选项 first|after。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">user</span> change email em <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">first</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">modify</span> em <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">first</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"修改表名\"><a class=\"anchor\" href=\"#修改表名\">#</a> 修改表名</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- alter table 旧表名 rename 新的表名</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">rename</span> new_user<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"数据类型\"><a class=\"anchor\" href=\"#数据类型\">#</a> 数据类型</h3>\n<h4 id=\"整型\"><a class=\"anchor\" href=\"#整型\">#</a> 整型</h4>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>所占字节</th>\n<th>值范围</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tinyint</td>\n<td>1 字节</td>\n<td>-128~127</td>\n</tr>\n<tr>\n<td>smallint</td>\n<td>2 字节</td>\n<td>-32768~32767</td>\n</tr>\n<tr>\n<td>mediumint</td>\n<td>3 字节</td>\n<td>-8388608~8388607</td>\n</tr>\n<tr>\n<td>int</td>\n<td>4 字节</td>\n<td>-2147483648~2147483647</td>\n</tr>\n<tr>\n<td>bigint</td>\n<td>8 字节</td>\n<td>+-9.22*10 的 18 次方</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"浮点类型\"><a class=\"anchor\" href=\"#浮点类型\">#</a> 浮点类型</h4>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>所占字节</th>\n<th>值范围</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>float(m, d)</td>\n<td>4 字节</td>\n<td>单精度浮点型，m 总个数，d 小数位</td>\n</tr>\n<tr>\n<td>double(m, d)</td>\n<td>8 字节</td>\n<td>双精度浮点型，m 总个数，d 小数位</td>\n</tr>\n<tr>\n<td>decimal(m, d)</td>\n<td></td>\n<td>decimal 是存储为字符串的浮点数</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>浮点是非精确值，会存在不太准确的情况</li>\n<li>而 decimal 叫做定点数。在 MySQL 内部，本质上是用字符串存储的。实际使用过程中如果存在金额、钱精度要求比较高的浮点数存储，建议使用 decimal（定点数）这个类型。</li>\n</ul>\n<h4 id=\"字符类型\"><a class=\"anchor\" href=\"#字符类型\">#</a> 字符类型</h4>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>所占字节</th>\n<th>值范围</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CHAR</td>\n<td>0-255 字节</td>\n<td>定长字符串</td>\n</tr>\n<tr>\n<td>VARCHAR</td>\n<td>0-255 字节</td>\n<td>变长字符串</td>\n</tr>\n<tr>\n<td>TINYBLOB</td>\n<td>0-255 字节</td>\n<td>不超过 255 个字符的二进制字符串</td>\n</tr>\n<tr>\n<td>TINYTEXT</td>\n<td>0-255 字节</td>\n<td>短文本字符串</td>\n</tr>\n<tr>\n<td>BLOB</td>\n<td>0-65535 字节</td>\n<td>二进制形式的长文本数据</td>\n</tr>\n<tr>\n<td>TEXT</td>\n<td>0-65535 字节</td>\n<td>长文本数据</td>\n</tr>\n<tr>\n<td>MEDIUMBLOB</td>\n<td>0-16 777 215 字节</td>\n<td>二进制形式的中等长度文本数据</td>\n</tr>\n<tr>\n<td>MEDIUMTEXT</td>\n<td>0-16 777 215 字节</td>\n<td>中等长度文本数据</td>\n</tr>\n<tr>\n<td>LOGNGBLOB</td>\n<td>0-4 294 967 295 字节</td>\n<td>二进制形式的极大文本数据</td>\n</tr>\n<tr>\n<td>LONGTEXT</td>\n<td>0-4 294 967 295 字节</td>\n<td>极大文本数据</td>\n</tr>\n<tr>\n<td>VARBINARY(M)</td>\n<td>允许长度 0-M 个字节的定长字节符串</td>\n<td>值的长度 + 1 个字节</td>\n</tr>\n<tr>\n<td>BINARY(M)</td>\n<td>M</td>\n<td>允许长度 0-M 个字节的定长字节符串</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"时间类型\"><a class=\"anchor\" href=\"#时间类型\">#</a> 时间类型</h4>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>所占字节</th>\n<th>值范围</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>date</td>\n<td>3 字节</td>\n<td>日期，格式：2014-09-18</td>\n</tr>\n<tr>\n<td>time</td>\n<td>3 字节</td>\n<td>时间，格式：08:42:30</td>\n</tr>\n<tr>\n<td>datetime</td>\n<td>8 字节</td>\n<td>日期时间，格式：2014-09-18 08:42:30</td>\n</tr>\n<tr>\n<td>timestamp</td>\n<td>4 字节</td>\n<td>自动存储记录修改的时间</td>\n</tr>\n<tr>\n<td>year</td>\n<td>1 字节</td>\n<td>年份</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>时间类型在 web 系统中用的比较少，很多时候很多人喜欢使用 int 来存储时间。插入时插入的是 unix 时间戳，因为这种方式更方便计算。在前端业务中用 date 类型的函数，再将 unix 时间戳转成人们可识别的时间。</li>\n<li>上面的类型你可以根据实际情况实际进行选择</li>\n<li>有些人为了在数据库管理中方便查看，也有人使用 datetime 类型来存储时间。</li>\n</ul>\n<h4 id=\"字段其他属性设置\"><a class=\"anchor\" href=\"#字段其他属性设置\">#</a> 字段其他属性设置</h4>\n<p><strong>UNSIGNED（无符号）</strong> 主要用于整型和浮点类型，使用无符号。即，没有前面面的 -（负号）。存储位数更长。tinyint 整型的取值区间为，-128~127。而使用无符号后可存储 0-255 个长度。</p>\n<p>创建时在整型或浮点字段语句后接上  <code>unsigned</code></p>\n<p><strong>ZEROFILL（0 填充）</strong> 0（不是空格）可以用来真补输出的值。使用这个修饰符可以阻止 MySQL 数据库存储负值。</p>\n<p>创建时在整型或浮点字段语句后接上  <code>zerofill</code></p>\n<p><strong>default</strong> default 属性确保在没有任何值可用的情况下，赋予某个常量值，这个值必须是常量，因为 MySQL 不允许插入函数或表达式值。此外，此属性无法用于 BLOB 或 TEXT 列。如果已经为此列指定了 NULL 属性，没有指定默认值时默认值将为 NULL，否则默认值将依赖于字段的数据类型。</p>\n<p>创建时在整型或浮点字段语句后接上   <code>default '值'</code></p>\n<p><strong>not null</strong> 如果将一个列定义为 not null，将不允许向该列插入 null 值。建议在重要情况下始终使用 not null 属性，因为它提供了一个基本验证，确保已经向查询传递了所有必要的值。</p>\n<p>创建时在整型或浮点字段语句后接上  <code>not null</code></p>\n<p><strong>null</strong> 为列指定 null 属性时，该列可以保持为空，而不论行中其它列是否已经被填充。记住，null 精确的说法是 “无”，而不是空字符串或 0。</p>\n<p>创建时在整型或浮点字段语句后不要声明 not null 即可</p>\n<h3 id=\"字符集\"><a class=\"anchor\" href=\"#字符集\">#</a> 字符集</h3>\n<h4 id=\"常用字符集\"><a class=\"anchor\" href=\"#常用字符集\">#</a> 常用字符集</h4>\n<table>\n<thead>\n<tr>\n<th>字符集</th>\n<th>说明</th>\n<th>字节长度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ASCII</td>\n<td>美国标准信息交换代码</td>\n<td>单字节</td>\n</tr>\n<tr>\n<td>GBK</td>\n<td>汉字内码扩展规范</td>\n<td>双字节</td>\n</tr>\n<tr>\n<td>unicode</td>\n<td>万国码</td>\n<td>4 字节</td>\n</tr>\n<tr>\n<td>UTF-8</td>\n<td>Unicode 的可变长度字符编码</td>\n<td>1 到 6 个字节</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"实际工作中要使用的编码\"><a class=\"anchor\" href=\"#实际工作中要使用的编码\">#</a> 实际工作中要使用的编码</h4>\n<table>\n<thead>\n<tr>\n<th>字符集</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>gbk_chinese_ci</td>\n<td>简体中文，不区分大小写</td>\n</tr>\n<tr>\n<td>utf8_general_ci</td>\n<td>Unicode (多语言), 不区分大小写</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"表引擎\"><a class=\"anchor\" href=\"#表引擎\">#</a> 表引擎</h3>\n<table>\n<thead>\n<tr>\n<th>引擎名称</th>\n<th>特点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>MyISAM</td>\n<td>常用。读取效率很高的引擎</td>\n</tr>\n<tr>\n<td>InnoDB</td>\n<td>常用。写入，支持事处等都支持</td>\n</tr>\n<tr>\n<td>Archive</td>\n<td>不常用。归档引擎，压缩比高达 1:10，用于数据归档</td>\n</tr>\n<tr>\n<td>NDB</td>\n<td>不常用。主要在 MySQL 集群服务器中使用，不做介绍</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"myisam\"><a class=\"anchor\" href=\"#myisam\">#</a> MyISAM</h4>\n<p>不支持事务，表锁 (表级锁，加锁会锁住整个表)，支持全文索引，操作速度快。常用于读取多的业务。</p>\n<ul>\n<li>myisam 存储引擎表由 myd 和 myi 组成。.myd 用来存放数据文件，.myi 用来存放索引文件。</li>\n<li>对于 myisam 存储引擎表，mysql 数据库只缓存其索引文件，数据文件的缓存由操作系统本身来完成。</li>\n</ul>\n<h4 id=\"innodb\"><a class=\"anchor\" href=\"#innodb\">#</a> InnoDB</h4>\n<ul>\n<li>支持事务，主要面向在线事务处理 (OLTP) 方面的应用。</li>\n<li>行锁设计，支持外键，即默认情况下读取操作不加锁。  InnoDB 是为处理巨大数据量时的最大性能设计。</li>\n</ul>\n<p>注：行锁：写入、更新操作的时候将这一行锁起来，不让其他人再操作了。表锁：写入、更新操作时，将表给锁起来不让其他人再操作了。事务：同时操作多个数据，若其中的一个数据操作失败。可回滚到操作之前。常用于银行、电商、金融等系统中。</p>\n<h3 id=\"索引\"><a class=\"anchor\" href=\"#索引\">#</a> 索引</h3>\n<h4 id=\"索引类型\"><a class=\"anchor\" href=\"#索引类型\">#</a> 索引类型</h4>\n<table>\n<thead>\n<tr>\n<th>索引类型</th>\n<th>功能说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>普通索引</td>\n<td>最基本的索引，它没有任何限制</td>\n</tr>\n<tr>\n<td>唯一索引</td>\n<td>某一行企用了唯一索引则不准许这一列的行数据中有重复的值。针对这一列的每一行数据都要求是唯一的</td>\n</tr>\n<tr>\n<td>主键索引</td>\n<td>它是一种特殊的唯一索引，不允许有空值。一般是在建表的时候同时创建主键索引，常用于用户 ID。类似于书中的页码</td>\n</tr>\n<tr>\n<td>全文索引</td>\n<td>对于需要全局搜索的数据，进行全文索引</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"普通索引\"><a class=\"anchor\" href=\"#普通索引\">#</a> 普通索引</h4>\n<p>为 money 表的 username 字段增加索引</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> money <span class=\"token keyword\">add</span> <span class=\"token keyword\">index</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"唯一索引\"><a class=\"anchor\" href=\"#唯一索引\">#</a> 唯一索引</h4>\n<p>为 money 表的 email 字段增加唯一索引</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> money <span class=\"token keyword\">add</span> <span class=\"token keyword\">unique</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"全文索引\"><a class=\"anchor\" href=\"#全文索引\">#</a> 全文索引</h4>\n<p>为 money 表的 content 字段增加唯一索引</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> money <span class=\"token keyword\">add</span> fulltext<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"主键索引\"><a class=\"anchor\" href=\"#主键索引\">#</a> 主键索引</h4>\n<p>为 money 表的 id 字段增加主键索引</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> money <span class=\"token keyword\">add</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"创建表时也可以声明索引\"><a class=\"anchor\" href=\"#创建表时也可以声明索引\">#</a> 创建表时也可以声明索引</h4>\n<p>创建表时可在创建表语句后加上对应的类型即可声明索引</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>字段<span class=\"token punctuation\">)</span><span class=\"token keyword\">INDEX</span> <span class=\"token punctuation\">[</span>索引名<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>字段<span class=\"token punctuation\">)</span>FULLTEXT <span class=\"token punctuation\">[</span>索引名<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>字段<span class=\"token punctuation\">)</span><span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">[</span>索引名<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>字段<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>中括号中的索引名，代表可选</p>\n<h3 id=\"增删改查\"><a class=\"anchor\" href=\"#增删改查\">#</a> 增删改查</h3>\n<h4 id=\"插入\"><a class=\"anchor\" href=\"#插入\">#</a> 插入</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- insert into 表 values (值 1, 值 2, 值 n);</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'lisi'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- insert into 表 (字段 1, 字段 2, 字段 n) values (值 1, 值 2, 值 n);</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>username<span class=\"token punctuation\">,</span>sex<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'zhangsan'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h5 id=\"一次插入多条记录\"><a class=\"anchor\" href=\"#一次插入多条记录\">#</a> 一次插入多条记录</h5>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span>password<span class=\"token punctuation\">,</span>sex<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token string\">'黄晓明'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abcdef'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'angelababy'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bcdeef'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'陈赫'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'123456'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">'王宝强'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'987654'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"查询\"><a class=\"anchor\" href=\"#查询\">#</a> 查询</h4>\n<p>基础查询</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>指定字段查询</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> id<span class=\"token punctuation\">,</span>username <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>as 别名</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> id <span class=\"token keyword\">as</span> ID<span class=\"token punctuation\">,</span>username <span class=\"token keyword\">as</span> name <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>查询单个字段不重复记录 distinct</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span> age <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"where\"><a class=\"anchor\" href=\"#where\">#</a> where</h5>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">where</span> age <span class=\"token operator\">></span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>where 后可接的条件:<br />\n=、&gt;、&lt;、&gt;=、&lt;=、!= 等比较运算符<br />\n多个条件还可以使用 or 、 and 等逻辑运算符进行多条件联合查询</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">where</span> age <span class=\"token operator\">></span> <span class=\"token number\">18</span> <span class=\"token operator\">and</span> sex <span class=\"token operator\">=</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"结果集排序\"><a class=\"anchor\" href=\"#结果集排序\">#</a> 结果集排序</h5>\n<ul>\n<li>asc 升序排列，从小到大（默认）</li>\n<li>desc 降序排列，从大到小</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> age <span class=\"token keyword\">desc</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"多字段排序\"><a class=\"anchor\" href=\"#多字段排序\">#</a> 多字段排序</h5>\n<p>按 age 排序，age 相同 再按 class 排序</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> age <span class=\"token keyword\">desc</span><span class=\"token punctuation\">,</span>class <span class=\"token keyword\">desc</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"结果集限制\"><a class=\"anchor\" href=\"#结果集限制\">#</a> 结果集限制</h5>\n<p>显示前五个用户</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"限制结果集并排序\"><a class=\"anchor\" href=\"#限制结果集并排序\">#</a> 限制结果集并排序</h5>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> oder <span class=\"token keyword\">by</span> age <span class=\"token keyword\">desc</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"结果集区间选择\"><a class=\"anchor\" href=\"#结果集区间选择\">#</a> 结果集区间选择</h5>\n<p>从第 1 条开始取 5 条记录</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> oder <span class=\"token keyword\">by</span> age <span class=\"token keyword\">desc</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>从第 5 条开始取 5 条记录</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> oder <span class=\"token keyword\">by</span> age <span class=\"token keyword\">desc</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"统计类函数使用\"><a class=\"anchor\" href=\"#统计类函数使用\">#</a> 统计类函数使用</h5>\n<ul>\n<li>sum 求和</li>\n<li>count 统计总数</li>\n<li>max 最大值</li>\n<li>min 最小值</li>\n<li>avg 平均值</li>\n</ul>\n<p>查询 user 表的 id 总数</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"分组-group-by\"><a class=\"anchor\" href=\"#分组-group-by\">#</a> 分组 group by</h5>\n<p>有相同的只会展示一条</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> moment <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> user_id<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"结果再过滤having\"><a class=\"anchor\" href=\"#结果再过滤having\">#</a> 结果再过滤 having</h5>\n<p>having 子句与 where 有相似之处但也有区别，都是设定条件的语句。</p>\n<p>having 是筛选组 而 where 是筛选记录。</p>\n<h5 id=\"整体使用sql\"><a class=\"anchor\" href=\"#整体使用sql\">#</a> 整体使用 SQL</h5>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">[</span>字段<span class=\"token number\">1</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">as</span> 别名<span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>函数<span class=\"token punctuation\">(</span>字段<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span>……字段n<span class=\"token punctuation\">]</span> <span class=\"token keyword\">FROM</span> 表名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">where</span>条件<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> 字段<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">HAVING</span> where_contition<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">order</span> 条件<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">limit</span> 条件<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h5 id=\"多表联合查询\"><a class=\"anchor\" href=\"#多表联合查询\">#</a> 多表联合查询</h5>\n<h6 id=\"内连接\"><a class=\"anchor\" href=\"#内连接\">#</a> 内连接</h6>\n<p>基本语法一：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- select 表 1. 字段 [as 别名], 表 n. 字段 from 表 1 [别名], 表 n where 条件；</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">.</span>uid<span class=\"token punctuation\">,</span><span class=\"token keyword\">user</span><span class=\"token punctuation\">.</span>username <span class=\"token keyword\">as</span> username<span class=\"token punctuation\">,</span>goods<span class=\"token punctuation\">.</span>oid <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">,</span>goods <span class=\"token keyword\">where</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">.</span>uid <span class=\"token operator\">=</span> goods<span class=\"token punctuation\">.</span>uid</pre></td></tr></table></figure><p>由于表名太长，每次写的时候容易写错。我们可以在表后直接跟上一个简写英文字符串。在前面拼接字段时，直接使用简写字符串。字段即可。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> u<span class=\"token punctuation\">.</span>uid<span class=\"token punctuation\">,</span>u<span class=\"token punctuation\">.</span>username <span class=\"token keyword\">as</span> username<span class=\"token punctuation\">,</span>o<span class=\"token punctuation\">.</span>oid <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> u<span class=\"token punctuation\">,</span>goods o <span class=\"token keyword\">where</span> u<span class=\"token punctuation\">.</span>uid <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span>uid</pre></td></tr></table></figure><p>基本语法二：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- select 表 1. 字段 [as 别名], 表 n. 字段 from 表 1 INNER JOIN 表 n on 条件；</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">.</span>uid<span class=\"token punctuation\">,</span><span class=\"token keyword\">user</span><span class=\"token punctuation\">.</span>username <span class=\"token keyword\">as</span> username<span class=\"token punctuation\">,</span>goods<span class=\"token punctuation\">.</span>oid <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">inner</span> <span class=\"token keyword\">join</span> goods <span class=\"token keyword\">on</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">.</span>uid <span class=\"token operator\">=</span> goods<span class=\"token punctuation\">.</span>uid</pre></td></tr></table></figure><h6 id=\"外连接\"><a class=\"anchor\" href=\"#外连接\">#</a> 外连接</h6>\n<p>左连接：包含所有的左边表中的记录甚至是右边表中没有和它匹配的记录</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">left</span> <span class=\"token keyword\">join</span> goods <span class=\"token keyword\">on</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">.</span>uid <span class=\"token operator\">=</span> goods<span class=\"token punctuation\">.</span>uid<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>右连接：包含所有的右边表中的记录甚至是右边表中没有和它匹配的记录</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">right</span> <span class=\"token keyword\">join</span> goods <span class=\"token keyword\">on</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">.</span>uid <span class=\"token operator\">=</span> goods<span class=\"token punctuation\">.</span>uid<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h6 id=\"子查询\"><a class=\"anchor\" href=\"#子查询\">#</a> 子查询</h6>\n<p>有时候，当我们查询的时候，需要的条件是另外一个 select 语句的结果，这时就需要使用子查询。用于子查询的关键字包括 in、not in、=、!=、exists、not exists 等。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- select 字段 from 表 where 字段 in (条件)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">where</span> uid <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">where</span> uid <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> uid <span class=\"token keyword\">from</span> goods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h6 id=\"记录联合\"><a class=\"anchor\" href=\"#记录联合\">#</a> 记录联合</h6>\n<p>使用 union 和 union all 关键字，将两个表的数据按照一定的查询条件查询出来后，将结果合并到一起显示。两者主要的区别是把结果直接合并在一起，而 union 是将 union all 后的结果进行一次 distinct，去除重复记录后的结果。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- select 语句 1 union [all] select 语句 2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">select</span> uid <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> uid <span class=\"token keyword\">from</span> goods<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"更新\"><a class=\"anchor\" href=\"#更新\">#</a> 更新</h4>\n<p>修改 money 表，将 balance 余额减 500。要求 userid 为 15</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- update 表名 set 字段 1 = 值 1, 字段 2 = 值 2, 字段 n = 值 n where 条件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">update</span> money <span class=\"token keyword\">set</span> balance<span class=\"token operator\">=</span>balance<span class=\"token operator\">-</span><span class=\"token number\">500</span> <span class=\"token keyword\">where</span> userid <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"修改多个字段\"><a class=\"anchor\" href=\"#修改多个字段\">#</a> 修改多个字段</h5>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">update</span> money <span class=\"token keyword\">set</span> balance<span class=\"token operator\">=</span>balance<span class=\"token operator\">-</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span>username<span class=\"token operator\">=</span><span class=\"token string\">'张三'</span> <span class=\"token keyword\">where</span> userid <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"同时对两个表进行更新\"><a class=\"anchor\" href=\"#同时对两个表进行更新\">#</a> 同时对两个表进行更新</h5>\n<p>修改 money，将 money 表的别名设置为 m；user 表的别名设置为 u；将 m 表的余额改为 m 表的 balance * 用户表的 age。执行条件是：m.userid = <span class=\"exturl\" data-url=\"aHR0cDovL3UuaWQ=\">u.id</span></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- update 表 1, 表 2 set 字段 1 = 值 1, 字段 2 = 值 2, 字段 n = 值 n where 条件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">update</span> money m<span class=\"token punctuation\">,</span><span class=\"token keyword\">user</span> u m<span class=\"token punctuation\">.</span>balance<span class=\"token operator\">=</span>m<span class=\"token punctuation\">.</span>balance<span class=\"token operator\">*</span>u<span class=\"token punctuation\">.</span>age <span class=\"token keyword\">where</span> m<span class=\"token punctuation\">.</span>userid<span class=\"token operator\">=</span>u<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"删除\"><a class=\"anchor\" href=\"#删除\">#</a> 删除</h4>\n<p>删除掉用户表中 id 大于 10 的所有用户</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- delete from 表 [where 条件];</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">delete</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">where</span> id <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"清空表记录\"><a class=\"anchor\" href=\"#清空表记录\">#</a> 清空表记录</h5>\n<p>清空表的数据，并且让自增的 id 从 1 开始自增</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- TRUNCATE TABLE 表名；</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">TRUNCATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>【切记】</p>\n<ul>\n<li>删除时一定要记住加上 where 条件，不然会清空掉整个表的记录。</li>\n<li>删除重要数据前一定要备份、备份、备份。</li>\n</ul>\n",
            "tags": [
                "code",
                "sql"
            ]
        },
        {
            "id": "https://juju486.github.io/2024/01/02/%E4%BD%BF%E7%94%A8%20Github%20Actions%20%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%20hexo%20%E5%8D%9A%E5%AE%A2/",
            "url": "https://juju486.github.io/2024/01/02/%E4%BD%BF%E7%94%A8%20Github%20Actions%20%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%20hexo%20%E5%8D%9A%E5%AE%A2/",
            "title": "使用 Github Actions 自动部署 hexo 博客",
            "date_published": "2024-01-02T16:00:00.000Z",
            "content_html": "<h3 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h3>\n<p>在学习 github actions 的时候，想到自己的博客是否能在每次 push 时自动部署。在参考了几篇文章之后，实现了此功能。</p>\n<h3 id=\"准备\"><a class=\"anchor\" href=\"#准备\">#</a> 准备</h3>\n<p>准备两个 git 仓库</p>\n<ol>\n<li>blogFile ：用来存放博客的源文件</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3h4eC5naXRodWIuaW8=\">xxx.github.io</span> ：用来存放博客编译后的文件，也是使用 github pages 的仓库，xxx 是你的 github 用户名</li>\n</ol>\n<h3 id=\"开始\"><a class=\"anchor\" href=\"#开始\">#</a> 开始</h3>\n<h4 id=\"生成-ssh-密钥\"><a class=\"anchor\" href=\"#生成-ssh-密钥\">#</a> 生成 SSH 密钥</h4>\n<p>为了在 github actions 中 执行  <code>hexo deloy</code>  ，需要使用 SSH 密钥认证。</p>\n<ol>\n<li>打开终端</li>\n<li>执行下面的命令，将示例中使用的电子邮件替换为 GitHub 电子邮件地址。</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ssh-keygen <span class=\"token parameter variable\">-t</span> ed25519 <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"your_email@example.com\"</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>一路回车，之后会生成 id_ed25519 私钥和 id_ed25519.pub 公钥文件。</li>\n</ol>\n<h4 id=\"添加密钥\"><a class=\"anchor\" href=\"#添加密钥\">#</a> 添加密钥</h4>\n<p>在 blogFile 仓库中 选中  <code>Settings</code>  ，选择左侧栏  <code>Secrets and variables</code>  中的  <code>Actions</code>  ，然后点击  <code>New repository secret</code>  创建 secrets 变量，把 id_ed25519（私钥） 中的内容添加进去。</p>\n<p>在 <span class=\"exturl\" data-url=\"aHR0cDovL3h4eC5naXRodWIuaW8=\">xxx.github.io</span> 仓库中 选中 <code>Settings</code>  ，选择左侧栏的  <code>Deploy keys</code>  ，然后点击  <code>Add deploy key</code>  ，勾选  <code>Allow wirte access</code> ，把 id_ed25519.pub（公钥）中内容添加进去。</p>\n<h4 id=\"一键部署\"><a class=\"anchor\" href=\"#一键部署\">#</a> 一键部署</h4>\n<p>要在 actions 中使用  <code>hexo deploy</code>  ，先需要实现 hexo 中的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudCM=\">一键部署</span>。</p>\n<ol>\n<li>安装 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLWRlcGxveWVyLWdpdA==\">hexo-deployer-git</span>。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>在博客根目录中的  <code>_config.yml</code>  中修改配置。</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  type<span class=\"token punctuation\">:</span> git</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  repo<span class=\"token punctuation\">:</span> git@github.com<span class=\"token punctuation\">:</span>xxx/xxx.github.io.git</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  branch<span class=\"token punctuation\">:</span> master</pre></td></tr></table></figure><p>repo 为 <span class=\"exturl\" data-url=\"aHR0cDovL3h4eC5naXRodWIuaW8=\">xxx.github.io</span> （存放编译后文件的那个仓库）的 SSH 地址。<br />\nbranch 为部署的分支。自己的是  <code>master</code>  还是  <code>main</code>  不要搞错了。</p>\n<h4 id=\"actions\"><a class=\"anchor\" href=\"#actions\">#</a> Actions</h4>\n<ol>\n<li>在博客根目录中新建  <code>.github</code>  文件夹。</li>\n<li>在  <code>.github</code>  中新建  <code>workflows</code>  文件夹。</li>\n<li>在  <code>workflows</code>  中新建  <code>deploy.yml</code>  文件。</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># deploy.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy Actions</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  push<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    branches<span class=\"token punctuation\">:</span> main <span class=\"token comment\"># main 分支发生 push 时运行</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  build<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    runs<span class=\"token punctuation\">-</span><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    steps<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v3</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        with<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          node<span class=\"token punctuation\">-</span><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> NPM INSTALL</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        run<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          npm install hexo<span class=\"token punctuation\">-</span>cli <span class=\"token punctuation\">-</span>g</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          npm install</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Add KEY</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        env<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token comment\"># \n          SSH_PRIVATE: ${{ secrets.SSH_DEPLOY_KEY }}  # 替换为在 blogFile 中添加的私钥变量 \n          # </span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        run<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          mkdir <span class=\"token punctuation\">-</span>p ~/.ssh/</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          echo \"$SSH_PRIVATE\" <span class=\"token punctuation\">></span> ~/.ssh/id_rsa</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          chmod 700 <span class=\"token punctuation\">-</span>R ~/.ssh</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          ssh<span class=\"token punctuation\">-</span>keyscan github.com <span class=\"token punctuation\">></span><span class=\"token punctuation\">></span> ~/.ssh/known_hosts</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>global user.email \"xxxx@xx.com\" </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>global user.name \"xxxx\"</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hexo Deploy</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        run<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>          hexo clean</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>          hexo generate</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          hexo deploy</pre></td></tr></table></figure><ol start=\"4\">\n<li>替换上面的  <code>SSH_DEPLOY_KEY</code>  为你在  <code>blogFile</code>  中添加的私钥变量。</li>\n<li>替换  <code>user.email</code>  和  <code>user.name</code>  为你 github 邮箱和用户名。</li>\n</ol>\n",
            "tags": [
                "code",
                "hexo"
            ]
        },
        {
            "id": "https://juju486.github.io/2023/12/31/2023%20%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/",
            "url": "https://juju486.github.io/2023/12/31/2023%20%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/",
            "title": "2023 年终总结",
            "date_published": "2023-12-31T16:00:00.000Z",
            "content_html": "<ul>\n<li>使用 uniapp 开发了一个 APP</li>\n<li>基本掌握了 Vue3</li>\n<li>部署了青龙面板，AList</li>\n<li>心态比去年焦虑了，反复失眠</li>\n<li>冲动消费</li>\n<li>坚持锻炼</li>\n</ul>\n<h3 id=\"工作\"><a class=\"anchor\" href=\"#工作\">#</a> 工作</h3>\n<p>技能上主要是对 uniapp 和 vue3 的熟练度提升了。</p>\n<h3 id=\"青龙面板\"><a class=\"anchor\" href=\"#青龙面板\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3doeW91ci9xaW5nbG9uZw==\">青龙面板</span></h3>\n<p>白嫖了阿里云 6 + 1 个月的学生认证免费服务器，部署了个青龙面板跑脚本。<br />\n跑美团领券脚本省了开会员和买券的钱🙂, 也有帮同事一起跑。</p>\n<h3 id=\"alist\"><a class=\"anchor\" href=\"#alist\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hbGlzdC5ubi5jaS96aC8=\">AList</span></h3>\n<p>一个管理网盘的项目。主要用来看动漫和电影，配合阿里云盘使用体验很不错。</p>\n<h3 id=\"心态\"><a class=\"anchor\" href=\"#心态\">#</a> 心态</h3>\n<p>也许是看见身边的朋友陆续开始结婚生娃，意识到自己已经到了谈婚论嫁的年龄，开始有点焦虑了。<br />\nand 其它 ......<br />\n 因为这些又开始反复失眠。现在已经在吃药了。</p>\n<h3 id=\"消费\"><a class=\"anchor\" href=\"#消费\">#</a> 消费</h3>\n<p>自己的开销还算是比较节省的。就是容易冲动消费，买了两次课，花费了不少，还不太愿意学😅</p>\n<h3 id=\"锻炼\"><a class=\"anchor\" href=\"#锻炼\">#</a> 锻炼</h3>\n<p>自己并不喜欢锻炼。<br />\n人总是在遇到挫折之后寻求改变，希望能坚持下去，哈哈。</p>\n<h3 id=\"反思\"><a class=\"anchor\" href=\"#反思\">#</a> 反思</h3>\n<p>工作时需要更认真一点。<br />\n上班闲的时候尽量做自我提升的事。<br />\n尽量控制自己的情绪，不伤及无辜。</p>\n<h3 id=\"其它\"><a class=\"anchor\" href=\"#其它\">#</a> 其它</h3>\n<p>驾照自从 4 月份挂科之后就没去练过了。<br />\n报的绘画班学了两月放弃了，学习的过程感觉比较痛苦，遂放弃。<br />\n玩游戏的时间相比去年少了很多，10 月后对游戏也提不起什么兴趣。</p>\n<h3 id=\"未来\"><a class=\"anchor\" href=\"#未来\">#</a> 未来</h3>\n<p>希望睡眠能变好；<br />\n 与自己和解，知足常乐，享受当下的生活；<br />\n 坚持锻炼💪;</p>\n",
            "tags": [
                "生活"
            ]
        },
        {
            "id": "https://juju486.github.io/2023/12/12/Pinia%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "url": "https://juju486.github.io/2023/12/12/Pinia%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "title": "Pinia 学习笔记",
            "date_published": "2023-12-12T16:00:00.000Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9waW5pYS52dWVqcy5vcmcvemgv\">官方文档</span></p>\n<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> pinia</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> pinia</pre></td></tr></table></figure><p>创建一个 pinia 实例 (根 store) 并将其传递给应用：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createApp <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createPinia <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'pinia'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App.vue'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> pinia <span class=\"token operator\">=</span> <span class=\"token function\">createPinia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>pinia<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"基础示例\"><a class=\"anchor\" href=\"#基础示例\">#</a> 基础示例</h2>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// stores/counter.js</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineStore <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'pinia'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> useCounterStore <span class=\"token operator\">=</span> <span class=\"token function\">defineStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'counter'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function-variable function\">state</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">// 也可以这样定义</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">// state: () => (&#123; count: 0 &#125;)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token literal-property property\">actions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>组件中使用该 store ：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;script setup&gt;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>import &#123; useCounterStore &#125; from &#39;@&#x2F;stores&#x2F;counter&#39;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>const counter &#x3D; useCounterStore ()</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>counter.count++</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>counter.$patch (&#123; count: counter.count + 1 &#125;)</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>&#x2F;&#x2F; 或使用 action 代替</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>counter.increment ()</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&lt;&#x2F;script&gt;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>&lt;template&gt;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  &lt;!-- 直接从 store 中访问 state --&gt;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  &lt;div&gt;Current Count: &lt;&#x2F;div&gt;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>&lt;&#x2F;template&gt;</pre></td></tr></table></figure><p>使用函数定义 Store (与组件  <code>setup()</code>  类似)</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> useCounterStore <span class=\"token operator\">=</span> <span class=\"token function\">defineStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'counter'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    count<span class=\"token punctuation\">.</span>value<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> count<span class=\"token punctuation\">,</span> increment <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>类似 Vuex 使用</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> useCounterStore <span class=\"token operator\">=</span> <span class=\"token function\">defineStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'counter'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token function-variable function\">state</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">getters</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function-variable function\">double</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token literal-property property\">actions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">const</span> useUserStore <span class=\"token operator\">=</span> <span class=\"token function\">defineStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">// 其他计算属性</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// 允许访问 this.counterStore 和 this.userStore</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token operator\">...</span><span class=\"token function\">mapStores</span><span class=\"token punctuation\">(</span>useCounterStore<span class=\"token punctuation\">,</span> useUserStore<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">// 允许读取 this.count 和 this.double</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token operator\">...</span><span class=\"token function\">mapState</span><span class=\"token punctuation\">(</span>useCounterStore<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'count'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'double'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">// 允许读取 this.increment ()</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token operator\">...</span><span class=\"token function\">mapActions</span><span class=\"token punctuation\">(</span>useCounterStore<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'increment'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"核心概念\"><a class=\"anchor\" href=\"#核心概念\">#</a> 核心概念</h2>\n<h3 id=\"定义-store\"><a class=\"anchor\" href=\"#定义-store\">#</a> 定义 Store</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineStore <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'pinia'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 你可以对 `defineStore ()` 的返回值进行任意命名，但最好使用 store 的名字，同时以 `use` 开头且以 `Store` 结尾。(比如 `useUserStore`，`useCartStore`，`useProductStore`)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 第一个参数是你的应用中 Store 的唯一 ID。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> useAlertsStore <span class=\"token operator\">=</span> <span class=\"token function\">defineStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'alerts'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// 其他配置...</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>defineStore()</code>  的第二个参数可接受两类值：Setup 函数或 Option 对象。</p>\n<h4 id=\"option-store\"><a class=\"anchor\" href=\"#option-store\">#</a> Option Store</h4>\n<p>与 Vue 的选项式 API 类似，我们也可以传入一个带有  <code>state</code> 、 <code>actions</code>  与  <code>getters</code>  属性的 Option 对象</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> useCounterStore <span class=\"token operator\">=</span> <span class=\"token function\">defineStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'counter'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token function-variable function\">state</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">getters</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function-variable function\">double</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token literal-property property\">actions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>你可以认为  <code>state</code>  是 store 的数据 ( <code>data</code> )， <code>getters</code>  是 store 的计算属性 ( <code>computed</code> )，而  <code>actions</code>  则是方法 ( <code>methods</code> )。</p>\n<h4 id=\"setup-store\"><a class=\"anchor\" href=\"#setup-store\">#</a> Setup Store</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> useCounterStore <span class=\"token operator\">=</span> <span class=\"token function\">defineStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'counter'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    count<span class=\"token punctuation\">.</span>value<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> count<span class=\"token punctuation\">,</span> increment <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>在 <em>Setup Store</em> 中：</p>\n<ul>\n<li><code>ref()</code>  就是  <code>state</code>  属性</li>\n<li><code>computed()</code>  就是  <code>getters</code></li>\n<li><code>function()</code>  就是  <code>actions</code></li>\n</ul>\n<h4 id=\"使用-store\"><a class=\"anchor\" href=\"#使用-store\">#</a> 使用 Store</h4>\n<p><code>store</code>  是一个用  <code>reactive</code>  包装的对象，这意味着不需要在 getters 后面写  <code>.value</code></p>\n<p>为了从 store 中提取属性时保持其响应性，你需要使用  <code>storeToRefs()</code></p>\n<p>action 可以直接解构</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;script setup&gt;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>import &#123; useCounterStore &#125; from &#39;@&#x2F;stores&#x2F;counter&#39;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>import &#123; storeToRefs &#125; from &#39;pinia&#39;;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>const store &#x3D; useCounterStore ()</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#x2F;&#x2F; ❌ 这将不起作用，因为它破坏了响应性</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>&#x2F;&#x2F; 这就和直接解构 &#96;props&#96; 一样</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>const &#123; name, doubleCount &#125; &#x3D; store</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>name &#x2F;&#x2F; 将始终是 &quot;Eduardo&quot;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>doubleCount &#x2F;&#x2F; 将始终是 0</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>setTimeout (() &#x3D;&gt; &#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  store.increment ()</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>&#125;, 1000)</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>&#x2F;&#x2F; ✅ 这样写是响应式的</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>&#x2F;&#x2F; 💡 当然你也可以直接使用 &#96;store.doubleCount&#96;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>const doubleValue &#x3D; computed (() &#x3D;&gt; store.doubleCount)</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>&#x2F;&#x2F; &#96;name&#96; 和 &#96;doubleCount&#96; 是响应式的 ref </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>&#x2F;&#x2F; 同时通过插件添加的属性也会被提取为 ref </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>&#x2F;&#x2F; 并且会跳过所有的 action 或非响应式 (不是 ref 或 reactive) 的属性 </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>const &#123; name, doubleCount &#125; &#x3D; storeToRefs (store) </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>&#x2F;&#x2F; 作为 action 的 increment 可以直接解构 </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>const &#123; increment &#125; &#x3D; store</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>&lt;&#x2F;script&gt;</pre></td></tr></table></figure><h3 id=\"state\"><a class=\"anchor\" href=\"#state\">#</a> State</h3>\n<h4 id=\"访问-state\"><a class=\"anchor\" href=\"#访问-state\">#</a> 访问 state</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">useStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>store<span class=\"token punctuation\">.</span>count<span class=\"token operator\">++</span></pre></td></tr></table></figure><h4 id=\"重置-state\"><a class=\"anchor\" href=\"#重置-state\">#</a> 重置 state</h4>\n<p>使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9waW5pYS52dWVqcy5vcmcvemgvY29yZS1jb25jZXB0cy8jb3B0aW9uLXN0b3Jlcw==\">选项式 API</span> 时，你可以通过调用 store 的  <code>$reset()</code>  方法将 state 重置为初始值。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">useStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>store<span class=\"token punctuation\">.</span><span class=\"token function\">$reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9waW5pYS52dWVqcy5vcmcvY29yZS1jb25jZXB0cy8jc2V0dXAtc3RvcmVz\">Setup Stores</span> 中，需要创建自己的  <code>$reset()</code>  方法</p>\n<h4 id=\"变更-state\"><a class=\"anchor\" href=\"#变更-state\">#</a> 变更 state</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>store<span class=\"token punctuation\">.</span>count<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>store<span class=\"token punctuation\">.</span><span class=\"token function\">$patch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> store<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'DIO'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>store<span class=\"token punctuation\">.</span><span class=\"token function\">$patch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  state<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'shoes'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">quantity</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  state<span class=\"token punctuation\">.</span>hasChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"替换-state\"><a class=\"anchor\" href=\"#替换-state\">#</a> 替换 state</h4>\n<p>通过变更  <code>pinia</code>  实例的  <code>state</code>  来设置整个应用的初始 state</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pinia<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"订阅-state\"><a class=\"anchor\" href=\"#订阅-state\">#</a> 订阅 state</h4>\n<p>类似于 Vuex 的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly92dWV4LnZ1ZWpzLm9yZy96aC9hcGkvaW5kZXguaHRtbCNzdWJzY3JpYmU=\">subscribe 方法</span>，你可以通过 store 的  <code>$subscribe()</code>  方法侦听 state 及其变化。比起普通的  <code>watch()</code> ，使用  <code>$subscribe()</code>  的好处是 <em>subscriptions</em> 在 <em>patch</em> 后只触发一次</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cartStore<span class=\"token punctuation\">.</span><span class=\"token function\">$subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mutation<span class=\"token punctuation\">,</span> state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">// import &#123; MutationType &#125; from 'pinia'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  mutation<span class=\"token punctuation\">.</span>type <span class=\"token comment\">// 'direct' | 'patch object' | 'patch function'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">// 和 cartStore.$id 一样</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  mutation<span class=\"token punctuation\">.</span>storeId <span class=\"token comment\">// 'cart'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// 只有 mutation.type === 'patch object' 的情况下才可用</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  mutation<span class=\"token punctuation\">.</span>payload <span class=\"token comment\">// 传递给 cartStore.$patch () 的补丁对象。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">// 每当状态发生变化时，将整个 state 持久化到本地存储。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cart'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>默认情况下，<em>state subscription</em> 会被绑定到添加它们的组件上 (如果 store 在组件的  <code>setup()</code>  里面)。这意味着，当该组件被卸载时，它们将被自动删除。如果你想在组件卸载后依旧保留它们，请将  <code>&#123; detached: true &#125;</code>  作为第二个参数，以将 <em>state subscription</em> 从当前组件中分离：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> someStore <span class=\"token operator\">=</span> <span class=\"token function\">useSomeStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 此订阅器即便在组件卸载之后仍会被保留</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>someStore<span class=\"token punctuation\">.</span><span class=\"token function\">$subscribe</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">detached</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"在组件外使用-store\"><a class=\"anchor\" href=\"#在组件外使用-store\">#</a> 在组件外使用 store</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createRouter <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-router'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">createRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// ❌ 由于引入顺序的问题，这将失败</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">useStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>router<span class=\"token punctuation\">.</span><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\">// 我们想要在这里使用 store</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span>isLoggedIn<span class=\"token punctuation\">)</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">else</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>router<span class=\"token punctuation\">.</span><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token comment\">// ✅ 这样做是可行的，因为路由器是在其被安装之后开始导航的，</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token comment\">// 而此时 Pinia 也已经被安装。</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">useStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span>requiresAuth <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>store<span class=\"token punctuation\">.</span>isLoggedIn<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token string\">'/login'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "code",
                "Pinia",
                "Vue"
            ]
        },
        {
            "id": "https://juju486.github.io/2023/09/01/%E4%BD%BF%E7%94%A8%20shelljs%20%E6%89%B9%E9%87%8F%E6%89%93%E5%8C%85%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/",
            "url": "https://juju486.github.io/2023/09/01/%E4%BD%BF%E7%94%A8%20shelljs%20%E6%89%B9%E9%87%8F%E6%89%93%E5%8C%85%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/",
            "title": "使用 shelljs 批量打包前端项目",
            "date_published": "2023-09-01T16:00:00.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>在公司里负责的前端项目每次去改通用的模块都需要一个个去打包，非常麻烦。在寻找解决方案时找到了 shelljs ，就尝试写了个打包脚本。</p>\n<h1 id=\"开始\"><a class=\"anchor\" href=\"#开始\">#</a> 开始</h1>\n<p>项目目录</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>├─project\t\t\t\t\t&#x2F;&#x2F; 总文件夹</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>│  ├─projectA \t\t\t&#x2F;&#x2F; 项目 A</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>│  ├─projectB \t\t    &#x2F;&#x2F; 项目 B</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>│  ├─projectC  \t        &#x2F;&#x2F; 项目 C</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>│  ├─ ...               &#x2F;&#x2F;......</pre></td></tr></table></figure><p>在 project 目录下执行  <code>npm init -y</code>  ，接着下载依赖包。<br />\n使用 npm</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> shelljs</pre></td></tr></table></figure><p>创建 build.js 文件，开始编写打包脚本</p>\n<p>引入 shell.js fs</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// build.js</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> shell <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shelljs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>获取当前目录下所有项目</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> filesPath <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readdirSync</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">statSync</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>打包函数</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 因为文档中没找到 exec 的同步方法，所以写了一个 Promise</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>shell<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">execSync</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">command<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    shell<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">,</span> resolve<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">buildFiles</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">files</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">const</span> success <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fail <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> i <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">const</span> e <span class=\"token operator\">=</span> files<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    shell<span class=\"token punctuation\">.</span><span class=\"token function\">cd</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token keyword\">await</span> shell<span class=\"token punctuation\">.</span><span class=\"token function\">execSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"npm run build\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">async</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">slient</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      success<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      fail<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">打包任务执行完毕，打包成功数量：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>success<span class=\"token punctuation\">.</span>length<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">,打包失败数量：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>fail<span class=\"token punctuation\">.</span>length<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fail<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">打包失败列表如下:\\n</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>fail<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在 project 目录的 package.json 中添加</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node build.js\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 buid.js 中调用方法</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>nodeEnv<span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>args<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">// 打包所有文件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">buildFiles</span><span class=\"token punctuation\">(</span>filesPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">// 打包指定文件 可多个  npm run build 项目名称 1 项目名称 2......  </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">const</span> buildArgs <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>filesPath<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">err:文件</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>v<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">不存在</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token function\">buildFiles</span><span class=\"token punctuation\">(</span>buildArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>打包功能算是完成了，在 project 目录下执行  <code>npm run build</code>  就可以打包所有的项目了，也可以指定项目  <code>npm run build projectA</code>  。</p>\n<h1 id=\"压缩-dist\"><a class=\"anchor\" href=\"#压缩-dist\">#</a> 压缩 dist</h1>\n<p>虽然批量打包已经实现了，但是把打包后的文件部署到服务器时还是要一个个目录去压缩上传。所以接下来使用  <code>archiver</code>  压缩打包后的 dist 文件并放在同一个目录。</p>\n<p>下载  <code>archiver</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> archiver <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><p>最终 build.js</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// build.js</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> shell <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shelljs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> archiver <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'archiver'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>shell<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">execSync</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">command<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    shell<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">,</span> resolve<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">clearDist</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">开始清理文件 distOut/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.zip</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      shell<span class=\"token punctuation\">.</span><span class=\"token function\">rm</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-rf'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">distOut/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.zip</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      shell<span class=\"token punctuation\">.</span><span class=\"token function\">rm</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-rf'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'distOut/*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'清理完成'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">const</span> dirname <span class=\"token operator\">=</span> __dirname<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">creatZip</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">开始压缩文件</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/dist</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">createWriteStream</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>dirname<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/distOut/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.zip</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">const</span> archive <span class=\"token operator\">=</span> <span class=\"token function\">archiver</span><span class=\"token punctuation\">(</span><span class=\"token string\">'zip'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      zlib<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">level</span><span class=\"token operator\">:</span> <span class=\"token number\">9</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    output<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'close'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>archive<span class=\"token punctuation\">.</span><span class=\"token function\">pointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">' total bytes'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'压缩完成!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    archive<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token keyword\">throw</span> err<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    archive<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    archive<span class=\"token punctuation\">.</span><span class=\"token function\">directory</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>dirname<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/dist</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    archive<span class=\"token punctuation\">.</span><span class=\"token function\">finalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">const</span> filesPath <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readdirSync</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">statSync</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> e <span class=\"token operator\">!=</span> <span class=\"token string\">'distOut'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">buildFiles</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">files</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">existsSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./distOut'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    fs<span class=\"token punctuation\">.</span><span class=\"token function\">mkdirSync</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">distOut</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">开始执行打包任务\\n检测文件数量为</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>files<span class=\"token punctuation\">.</span>length<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  <span class=\"token keyword\">const</span> success <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fail <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> i <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">const</span> e <span class=\"token operator\">=</span> files<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">开始打包第</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>i <span class=\"token operator\">*</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">个，</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>e<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    shell<span class=\"token punctuation\">.</span><span class=\"token function\">cd</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      <span class=\"token keyword\">await</span> shell<span class=\"token punctuation\">.</span><span class=\"token function\">execSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"npm run build\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">async</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">slient</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>      success<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">第</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>i <span class=\"token operator\">*</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">个</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>e<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">打包完成！</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>      <span class=\"token function\">clearDist</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>      <span class=\"token function\">creatZip</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>      fail<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">第</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>i <span class=\"token operator\">*</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">个</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>e<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">打包失败！</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">打包任务执行完毕，打包成功数量：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>success<span class=\"token punctuation\">.</span>length<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">,打包失败数量：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>fail<span class=\"token punctuation\">.</span>length<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fail<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">打包失败列表如下:\\n</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>fail<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>nodeEnv<span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>args<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>  <span class=\"token comment\">// 打包所有文件</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>  <span class=\"token function\">buildFiles</span><span class=\"token punctuation\">(</span>filesPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>  <span class=\"token comment\">// 打包指定文件 可多个  npm run build 项目名称 1 项目名称 2......  </span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>  <span class=\"token keyword\">const</span> buildArgs <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>filesPath<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">err:文件</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>v<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">不存在</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>  <span class=\"token function\">buildFiles</span><span class=\"token punctuation\">(</span>buildArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "code",
                "Vue"
            ]
        },
        {
            "id": "https://juju486.github.io/2023/05/31/uniapp%E7%9A%84webview%E4%B8%AD%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87/",
            "url": "https://juju486.github.io/2023/05/31/uniapp%E7%9A%84webview%E4%B8%AD%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87/",
            "title": "uniapp的webview中保存图片",
            "date_published": "2023-05-31T16:00:00.000Z",
            "content_html": "<h1 id=\"方法\"><a class=\"anchor\" href=\"#方法\">#</a> 方法</h1>\n<ol>\n<li>\n<p>向 webview 注入 js 监听。优点是 webview 的页面不需要更改。</p>\n</li>\n<li>\n<p>使用 webview 通信。webview 页面中使用 uni.postMessage 发送信息，uniapp 中 用 onPostMessage 接收。</p>\n<p>这里只讲第二种，第一种请参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hc2suZGNsb3VkLm5ldC5jbi9xdWVzdGlvbi8xMDkzNzM=\">这里</span> 。</p>\n</li>\n</ol>\n<h1 id=\"实现步骤\"><a class=\"anchor\" href=\"#实现步骤\">#</a> 实现步骤</h1>\n<h2 id=\"webview-页面\"><a class=\"anchor\" href=\"#webview-页面\">#</a> webview 页面</h2>\n<p>引入 uni.webview.js <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vZGNsb3VkL3VuaS1hcHAvdHJlZS9kZXYvZGlzdA==\">下载地址</span> 。<br />\nUniAppJSBridgeReady 事件触发后代表可以进行通信了。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>script type<span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"js/uni.webview.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'UniAppJSBridgeReady'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token comment\">// 加载完成</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      uni<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> <span class=\"token string\">'message'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      uni<span class=\"token punctuation\">.</span><span class=\"token function\">getEnv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'当前环境：'</span> <span class=\"token operator\">+</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr></table></figure><p>调用 uni.postMessage ，参数放入 data 中。<br />\n我这里是长按保存图片，你可以根据自己的需求调用。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">touchstart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timer <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time <span class=\"token operator\">>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'save'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        uni<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> <span class=\"token string\">'download'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>url</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token function\">touchend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"uniapp-页面\"><a class=\"anchor\" href=\"#uniapp-页面\">#</a> uniapp 页面</h2>\n<p>使用 onPostMessage 监听通信。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token operator\">&lt;</span>web<span class=\"token operator\">-</span>view <span class=\"token operator\">:</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"url\"</span>  <span class=\"token operator\">:</span>webview<span class=\"token operator\">-</span>styles<span class=\"token operator\">=</span><span class=\"token string\">\"styles\"</span> <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"&#123;width:'750rpx',height:height+'px'&#125;\"</span> @onPostMessage<span class=\"token operator\">=</span><span class=\"token string\">\"onPostMessage\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>web<span class=\"token operator\">-</span>view<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">onPostMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token comment\">//data.detail.data 返回的数据是数组。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> action <span class=\"token punctuation\">,</span>url <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>action <span class=\"token operator\">==</span> <span class=\"token string\">'download'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token comment\">// 传过来的 url 是 base64 的，所以这里转了一下</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token comment\">// 转换插件地址 https://ext.dcloud.net.cn/plugin?id=123</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token function\">base64ToPath</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          uni<span class=\"token punctuation\">.</span><span class=\"token function\">saveImageToPhotosAlbum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token literal-property property\">filePath</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>              uni<span class=\"token punctuation\">.</span><span class=\"token function\">showToast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'保存成功'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">icon</span><span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">2000</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token function-variable function\">fail</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>              console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>              uni<span class=\"token punctuation\">.</span><span class=\"token function\">showToast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'保存失败'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">icon</span><span class=\"token operator\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">2000</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>          uni<span class=\"token punctuation\">.</span><span class=\"token function\">showToast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'保存失败'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">icon</span><span class=\"token operator\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">2000</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr></table></figure>",
            "tags": [
                "code",
                "uniapp"
            ]
        },
        {
            "id": "https://juju486.github.io/2022/11/27/%E4%BD%BF%E7%94%A8Rss%E6%8F%90%E9%AB%98%E9%98%85%E8%AF%BB%E6%95%88%E7%8E%87/",
            "url": "https://juju486.github.io/2022/11/27/%E4%BD%BF%E7%94%A8Rss%E6%8F%90%E9%AB%98%E9%98%85%E8%AF%BB%E6%95%88%E7%8E%87/",
            "title": "使用Rss提高阅读效率",
            "date_published": "2022-11-27T04:45:45.000Z",
            "content_html": "<h1 id=\"简介\"><a class=\"anchor\" href=\"#简介\">#</a> 简介</h1>\n<blockquote>\n<p>RSS（英文全称：RDF Site Summary 或 Really Simple Syndication），中文译作简易信息聚合，也称聚合内容，是一种消息来源格式规范，用以聚合多个网站更新的内容并自动通知网站订阅者。使用 RSS 后，网站订阅者便无需再手动查看网站是否有新的内容，同时 RSS 可将多个网站更新的内容进行整合，以摘要的形式呈现，有助于订阅者快速获取重要信息，并选择性地点阅查看。</p>\n</blockquote>\n<p>摘录自维基百科</p>\n<h1 id=\"快速上手\"><a class=\"anchor\" href=\"#快速上手\">#</a> 快速上手</h1>\n<h2 id=\"选择阅读器\"><a class=\"anchor\" href=\"#选择阅读器\">#</a> 选择阅读器</h2>\n<p>首先，你需要一个 RSS 阅读器。<br />\n博主使用的是 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW5vcmVhZGVyLmNvbS8=\">inoreader</span>，需要配合魔法网络使用，其他阅读器请自行百度。</p>\n<h2 id=\"添加订阅源\"><a class=\"anchor\" href=\"#添加订阅源\">#</a> 添加订阅源</h2>\n<p>找到新增按钮<br />\n<img data-src=\"https://cdn.statically.io/gh/juju486/picx-images-hosting@master/1669602502701.452w8xstkws0.webp\" alt=\"\" /><br />\n搜索关键字或者 RSS 订阅链接（.xml 结尾），然后点击订阅就可以了。</p>\n<h1 id=\"进阶技巧\"><a class=\"anchor\" href=\"#进阶技巧\">#</a> 进阶技巧</h1>\n<p>考虑到大部分网站并没有提供 RSS，所以我们需要使用一款非常🐂的工具 ————<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0RJWWdvZC9SU1NIdWI=\">RssHub</span></p>\n<blockquote>\n<p>RSSHub 是一个开源、简单易用、易于扩展的 RSS 生成器，可以给任何奇奇怪怪的内容生成 RSS 订阅源。RSSHub 借助于开源社区的力量快速发展中，目前已适配数百家网站的上千项内容</p><p>可以配合浏览器扩展 <a href=\"https://github.com/DIYgod/RSSHub-Radar\" target=\"_blank\" rel=\"noopener noreferrer\">RSSHub Radar<span><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" width=\"15\" height=\"15\" class=\"icon outbound\"><path fill=\"currentColor\" d=\"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z\"></path> <polygon fill=\"currentColor\" points=\"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9\"></polygon></svg> <span class=\"sr-only\">(opens new window)</span></span></a> 和 移动端辅助 App <a href=\"https://github.com/Cay-Zhang/RSSBud\" target=\"_blank\" rel=\"noopener noreferrer\">RSSBud<span><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" width=\"15\" height=\"15\" class=\"icon outbound\"><path fill=\"currentColor\" d=\"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z\"></path> <polygon fill=\"currentColor\" points=\"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9\"></polygon></svg> <span class=\"sr-only\">(opens new window)</span></span></a> (iOS) 与 <a href=\"https://github.com/LeetaoGoooo/RSSAid\" target=\"_blank\" rel=\"noopener noreferrer\">RSSAid<span><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" width=\"15\" height=\"15\" class=\"icon outbound\"><path fill=\"currentColor\" d=\"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z\"></path> <polygon fill=\"currentColor\" points=\"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9\"></polygon></svg> <span class=\"sr-only\">(opens new window)</span></span></a> (Android) 食用</p>\n</blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnJzc2h1Yi5hcHAv\">文档地址</span></p>\n<h2 id=\"添加下载查询当前网址是否有订阅源-的扩展或-app\"><a class=\"anchor\" href=\"#添加下载查询当前网址是否有订阅源-的扩展或-app\">#</a> 添加 / 下载查询当前网址是否有订阅源 的扩展或 APP</h2>\n<blockquote>\n<p>一个可以帮助你快速发现和订阅当前网站 RSS 和 RSSHub 的浏览器扩展 / APP。</p>\n</blockquote>\n<p>首先为你的浏览器添加 RSSHub Radar 扩展（点击去下载）。</p>\n<p dir=\"auto\"><a href=\"https://chrome.google.com/webRssstore/detail/kefjpfngnndepjbopdmoebkipbgkggaa\" rel=\"nofollow\"><img data-src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/chrome/chrome_128x128.png\" width=\"48\" style=\"max-width: 100%;\"></a>\n<a href=\"https://microsoftedge.microsoft.com/addons/detail/gangkeiaobmjcjokiofpkfpcobpbmnln\" rel=\"nofollow\"><img data-src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/edge/edge_128x128.png\" width=\"48\" style=\"max-width: 100%;\"></a>\n<a href=\"https://addons.mozilla.org/zh-CN/firefox/addon/rsshub-radar/\" rel=\"nofollow\"><img data-src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/firefox/firefox_128x128.png\" width=\"48\" style=\"max-width: 100%;\"></a>\n<a href=\"https://apps.apple.com/us/app/rsshub-radar/id1610744717?l=zh&amp;mt=12\" rel=\"nofollow\"><img data-src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/safari/safari_128x128.png\" width=\"48\" style=\"max-width: 100%;\"></a></p>\n(如果你的浏览器不能添加扩展，也许你该换浏览器了)。\n移动端用户请下载相应的 APP。\n<p>完成之后，就可以查询当前网址是否有订阅源了。直接订阅或复制链接到你的阅读器。<br />\n<img data-src=\"https://cdn.statically.io/gh/juju486/picx-images-hosting@master/1669604901848.ajsizylunmg.webp\" alt=\"\" /></p>\n<blockquote>\n<p>官方提供的 RSSHub 域名可能查询会比较慢，你可以自建（自行百度）或者用我的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yc3MtZ29sZC1yaG8udmVyY2VsLmFwcA==\">https://rss-gold-rho.vercel.app</span><br />\n<img data-src=\"https://cdn.statically.io/gh/juju486/picx-images-hosting@master/1669605175500.58971nfokis0.webp\" alt=\"\" /></p>\n</blockquote>\n<h2 id=\"使用-rsshub-添加订阅源\"><a class=\"anchor\" href=\"#使用-rsshub-添加订阅源\">#</a> 使用 RSSHub 添加订阅源</h2>\n<p>以微博订阅某博主为例：</p>\n<p>路由: /weibo/user/:uid/:routeParams?<br />\nRss 链接：<strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yc3MtZ29sZC1yaG8udmVyY2VsLmFwcA==\">https://rss-gold-rho.vercel.app</span></strong>/weibo/user/<strong>234234</strong> （<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yc3MtZ29sZC1yaG8udmVyY2VsLmFwcA==\">https://rss-gold-rho.vercel.app</span> 为你的 RSSHub 域名，234234 为用户 id，改成你需要订阅博主的 id）。</p>\n<p>其他示例请参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnJzc2h1Yi5hcHAv\">文档</span>。</p>\n",
            "tags": [
                "工具",
                "rss"
            ]
        }
    ]
}